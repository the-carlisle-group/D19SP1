 ProcessExpression←{
     request←⍵
     response←⍺
     ns←⎕NS''
     ns.timeStamp←#.CarlisleGroup.AWSTools.Utils.GetTimeStamp
     ns.aplVersion←#.APLVersion
     ns.outputType←1(819⌶)request #.CarlisleGroup.Rumba.Core.GetQueryParameter'outputtype'
     ns.outputType←(0=≢ns.outputType)⊃ns.outputType'JSON'
     ns.outputType←checkForValidOutputType ns.outputType
     ns.expression←1⊃request.Segments
     ns.result←{0::⎕NULL ⋄ ⍎⍵}ns.expression
     ⎕NULL≡ns.result:⎕SIGNAL⊂('EN' 400)('EM' 'Expression does not produce a result.')('Message'('Expression: ',ns.expression))
     ns.dr←⎕DR ns.result

⍝     temp←GetTempFile'.dcf'
⍝     tn←temp ⎕FCREATE 0
⍝     _←('U' 1)('J' 1)('Z' 1)⎕FPROPS tn
⍝     cn←ns ⎕FAPPEND tn
⍝     ok←⎕FUNTIE tn

     aws←#.CarlisleGroup.AWSTools
     c←GetS3Client Settings
     s←aws.S3.Service.New c
     b←aws.S3.Bucket.New s
     b.Name←Settings.AWS_Bucket
     b.Region←Settings.AWS_Region
     ob←aws.S3.Object.New b
     ob.ACL←'public-read'
⍝     ob.ContentType←'application/octet-stream' ⍝
     ob.ContentType←'application/json'
⍝     ob.Value←GetNativeFileAsASCII temp ⍝
     ob.Value←⎕JSON ns
     ob.Folder←'responses'
 ⍝    ob.Key←(' '~⍨∊⍕⎕TS),'.dcf' ⍝
     ob.Key←(' '~⍨∊⍕⎕TS),'.json'
     ok←ob.Put

     response.StatusCode←307 ⍝ 307 = tempoarary redirect & 301 permanent redirect
     response.Headers←⊂'Location'ob.URI
     response
 }
